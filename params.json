{
  "name": "ccollection",
  "tagline": "Implementation of containers like vector, list, queue, deque, stack, set, map, priority queue etc. in C",
  "body": "# ccollection\r\nImplementation of containers like vector, list, queue, deque, stack, set, map, priority queue etc. in C\r\n\r\n## Container in progress : vector\r\n\r\n```C\r\n/* Create a new vector */\r\nvector_t* vector_new(const size_t elem_size);\r\n\r\n/* destory vector, free all memory */\r\ncerror_t vector_destroy(vector_t* vector);\r\n\r\n/* Reserve a predetermind size for vector */\r\ncerror_t vector_reserve(vector_t* vector, const size_t count);\r\n\r\n/* get number of elements in vector */\r\nsize_t vector_get_size(const vector_t* vector);\r\n\r\n/* get current capacity of vector */\r\nsize_t vector_get_capacity(const vector_t* vector);\r\n\r\n/* check if vector is empty */\r\nbool vector_is_empty(const vector_t* vector);\r\n\r\n/* insert one element at the end of the vector */\r\ncerror_t vector_push_back(vector_t* vector, const item_t* item);\r\n\r\n/* erase an element from the end of the vector */\r\ncerror_t vector_pop_back(vector_t* vector);\r\n\r\ncerror_t vector_assign_n(vector_t* vector, const size_t n, const item_t* val);\r\ncerror_t vector_insert(vector_t* vector, const pos_t pos, const item_t* item);\r\ncerror_t vector_erase(vector_t* vector, const pos_t pos);\r\ncerror_t vector_swap(vector_t* first, vector_t* second);\r\ncerror_t vector_clear(vector_t* vector);\r\ncerror_t vector_at(const vector_t* vector, const pos_t index, item_t* item);\r\n```\r\n## How to use\r\n```C\r\n#include <stdio.h>\r\n\r\n#include \"include/ccollection.h\"\r\n\r\nint main()\r\n{\r\n    vector_t * vec = vector_new(sizeof(int));\r\n\r\n    int value = 100, i;\r\n    vector_push_back(vec, &value);\r\n    vector_push_back(vec, &value);\r\n    vector_push_back(vec, &value);\r\n\r\n    for (i = 0; i < vector_get_size(vec); i++)\r\n    {\r\n        vector_at(vec, i, &value);\r\n        printf(\"%d \", value);\r\n    }\r\n    printf(\"\\n\");\r\n    vector_destroy(vec);\r\n}\r\n```\r\n\r\n## Tasks pending\r\n- Iterators\r\n- More unit tests\r\n- benchmarking against STL vector\r\n\r\n## Containers to be implemented\r\n- list\r\n- queue\r\n- dequeue\r\n- stack\r\n- set\r\n- map\r\n- priority queue\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}